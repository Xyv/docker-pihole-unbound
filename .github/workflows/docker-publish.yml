name: Docker

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - master
    # Publish `v1.2.3` tags as releases.
    tags:
      - v*
  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME: pihole

jobs:
  # Push image to GitHub Packages.
  # See also https://docs.docker.com/docker-hub/builds/
  push:
    # Ensure test job passes before pushing image.
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build image
        id: build-image
        run: |
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest
          # Export version to reuse in next job

          echo "${VERSION}"
          echo "${PIHOLE_VERSION}"

          docker buildx build \
          --platform linux/arm/v7 \
          --output "type=image,push=false" \
          --tag "${IMAGE_NAME}" \
          --build-arg "PIHOLE_VERSION=${VERSION}" \
          --file one-container/pihole-unbound/Dockerfile ./one-container/pihole-unbound
          docker images

      - name: Log into registry
        run: echo "${{ secrets.CR_PAT }}" | docker login ghcr.io -u $GITHUB_ACTOR --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/$GITHUB_ACTOR/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "master" ] && VERSION=latest

          docker buildx build \
          --platform linux/arm/v7 \
          --output "type=image,push=true" \
          --tag $IMAGE_ID:$VERSION \
          --build-arg "PIHOLE_VERSION=${VERSION}" \
          --file one-container/pihole-unbound/Dockerfile ./one-container/pihole-unbound
